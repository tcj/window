#ifndef INSPECTOR_H
#define INSPECTOR_H TRUE

#include <clib/intuition_protos.h>
#include <intuition/intuition.h>
#include <clib/dos_protos.h>
#include <clib/utility_protos.h>

#include "rkrmsupport.h"

extern struct TagItem *idcmpNameTags;

/*
 
{
	{ IDCMP_SIZEVERIFY, 		(ULONG)"IDCMP_SIZEVERIFY" },
	{ IDCMP_NEWSIZE, 			(ULONG)"IDCMP_NEWSIZE" },
	{ IDCMP_REFRESHWINDOW, 	(ULONG)"IDCMP_REFRESHWINDOW" },
	{ IDCMP_MOUSEBUTTONS, 	(ULONG)"IDCMP_MOUSEBUTTONS"	},
	{ IDCMP_MOUSEMOVE, 		(ULONG)"IDCMP_MOUSEMOVE"	},
	{ IDCMP_GADGETDOWN,		(ULONG)"IDCMP_GADGETDOWN" },
	{ IDCMP_GADGETUP, 		(ULONG)"IDCMP_GADGETUP" },
	{ IDCMP_REQSET, 			(ULONG)"IDCMP_REQSET" },
	{ IDCMP_MENUPICK, 		(ULONG)"IDCMP_MENUPICK" },
	{ IDCMP_CLOSEWINDOW, 	(ULONG)"IDCMP_CLOSEWINDOW" },
	{ IDCMP_RAWKEY, 			(ULONG)"IDCMP_RAWKEY" },
	{ IDCMP_REQVERIFY,		(ULONG)"IDCMP_REQVERIFY" },
	{ IDCMP_REQCLEAR, 		(ULONG)"IDCMP_REQCLEAR" },
	{ IDCMP_MENUVERIFY, 		(ULONG)"IDCMP_MENUVERIFY" },
	{ IDCMP_NEWPREFS,			(ULONG)"IDCMP_NEWPREFS" },
	{ IDCMP_DISKINSERTED, 	(ULONG)"IDCMP_DISKINSERTED" },
	{ IDCMP_DISKREMOVED, 	(ULONG)"IDCMP_DISKREMOVED" },
	{ IDCMP_WBENCHMESSAGE,	(ULONG)"IDCMP_WBENCHMESSAGE" },
	{ IDCMP_ACTIVEWINDOW, 	(ULONG)"IDCMP_ACTIVEWINDOW" },
	{ IDCMP_INACTIVEWINDOW, (ULONG)"IDCMP_INACTIVEWINDOW" },
	{ IDCMP_DELTAMOVE,		(ULONG)"IDCMP_DELTAMOVE" },
	{ IDCMP_VANILLAKEY, 		(ULONG)"IDCMP_VANILLAKEY" },
	{ IDCMP_INTUITICKS, 		(ULONG)"IDCMP_INTUITICKS" },
	{ IDCMP_IDCMPUPDATE,		(ULONG)"IDCMP_IDCMPUPDATE" },
	{ IDCMP_MENUHELP, 		(ULONG)"IDCMP_MENUHELP" },
	{ IDCMP_CHANGEWINDOW, 	(ULONG)"IDCMP_CHANGEWINDOW" },
	{ IDCMP_GADGETHELP,		(ULONG)"IDCMP_GADGETHELP" },
	{ IDCMP_LONELYMESSAGE, 	(ULONG)"IDCMP_LONELYMESSAGE" },
	{ TAG_DONE },
};

*/

extern BPTR inspector;
extern const char *idcmpNames[];

void inspectWindow ( struct Window *win );
BPTR openInspector( void );
void closeInspector( void );

#endif
